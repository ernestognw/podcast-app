{"version":3,"file":"5.f03d7c792edf369c4266.hot-update.js","sources":["webpack:///components/podcast-list.js","webpack:///pages/channel.js"],"sourcesContent":["import 'isomorphic-fetch'\nimport Link from 'next/link'\nimport Layout from '../components/layout'\n\nexport default class extends React.Component {\n\n  static async getInitialProps ({ query }) {\n    let id = query.id\n    let fetchClip = await fetch(`https://api.audioboom.com/audio_clips/${id}.mp3`)\n    let clip = (await fetchClip.json()).body.audio_clip\n    return { clip }\n  }\n\n  render() {\n    const { clip } = this.props\n\n    return <Layout title={clip.title}>\n\n      <div className='modal'>\n        <div className='clip'>\n          <nav>\n            <Link href={`/channel?id=${clip.channel.id}`}>\n              <a className='close'>&lt; Volver</a>\n            </Link>\n          </nav>\n\n          <picture>\n            <div style={{ backgroundImage: `url(${clip.urls.image || clip.channel.urls.logo_image.original})` }} />\n          </picture>\n\n          <div className='player'>\n            <h3>{ clip.title }</h3>\n            <h6>{ clip.channel.title }</h6>\n            <audio controls autoPlay={true}>\n              <source src={clip.urls.high_mp3} type='audio/mpeg' />\n            </audio>\n          </div>\n        </div>\n      </div>\n\n      <style jsx>{`\n        nav {\n          background: none;\n        }\n        nav a {\n          display: inline-block;\n          padding: 15px;\n          color: white;\n          cursor: pointer;\n          text-decoration: none;\n        }\n        .clip {\n          display: flex;\n          height: 100%;\n          flex-direction: column;\n          background: #8756ca;\n          color: white;\n        }\n        picture {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          flex: 1 1;\n          flex-direction: column;\n          width: auto;\n          padding: 10%;\n        }\n        picture div {\n          width: 100%;\n          height: 100%;\n          background-position: 50% 50%;\n          background-size: contain;\n          background-repeat: no-repeat;\n        }\n        .player {\n          padding: 30px;\n          background: rgba(0,0,0,0.3);\n          text-align: center;\n        }\n        h3 {\n          margin: 0;\n        }\n        h6 {\n          margin: 0;\n          margin-top: 1em;\n        }\n        audio {\n          margin-top: 2em;\n          width: 100%;\n        }\n\n        .modal {\n          position: fixed;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          z-index: 99999;\n        }\n      `}</style>\n    </Layout>\n  }\n}\n\n\n// WEBPACK FOOTER //\n// components/podcast-list.js","import \"isomorphic-fetch\";\nimport Layout from '../components/layout'\nimport ChannelGrid from '../components/channel-grid'\nimport PodcastList from '../components/podcast-list'\n\nexport default class extends React.Component {\n  static async getInitialProps({ query }) {\n    let idChannel = query.id;\n\n    let [reqChannel, reqAudios, reqSeries] = await Promise.all([\n      fetch(`https://api.audioboom.com/channels/${idChannel}`),\n      fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`),\n      fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`)\n    ])\n\n    let [dataChannel, dataAudios, dataSeries] = await Promise.all([\n      reqChannel.json(),\n      reqAudios.json(),\n      reqSeries.json()\n    ])\n\n    let channel = dataChannel.body.channel;\n    let audioClips = dataAudios.body.audio_clips;\n    let series = dataSeries.body.channels;\n\n    return { channel, audioClips, series };\n  }\n\n  render() {\n    const { channel, audioClips, series } = this.props\n\n    return <Layout title={channel.title}>\n      <div className=\"banner\" style={{ backgroundImage: `url(${channel.urls.banner_image.original})` }} />\n      \n      <h1>{ channel.title }</h1>\n\n      { series.length > 0 &&\n        <div>\n          <h2>Series</h2>\n          <ChannelGrid channels={ series } />\n        </div>\n      }\n\n      <h2>Ultimos Podcasts</h2>\n      <PodcastList podcasts={ audioClips } />\n\n      <style jsx>{`\n        .banner {\n          width: 100%;\n          padding-bottom: 25%;\n          background-position: 50% 50%;\n          background-size: cover;\n          background-color: #aaa;\n        }\n        h1 {\n          font-weight: 600;\n          padding: 15px;\n        }\n        h2 {\n          padding: 15px;\n          font-size: 1.2em;\n          font-weight: 600;\n          margin: 0;\n        }\n      `}</style>\n    </Layout>\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// pages/channel.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;AAUA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAlBA;AAAA;AAAA;AAqFA;;;;;;;;;;;;AA/FA;AACA;;AACA;AACA;;AADA;;AACA;AACA;;AADA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;AAPA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AAwBA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAbA;AAAA;AAAA;AAmCA;;;;;;;;;;;;;AA5DA;AACA;;AAEA;AACA;;;;AADA;AAAA;AAAA;;AAMA;AACA;;;;AADA;AAAA;AAAA;AAMA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;AArBA;AACA;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}